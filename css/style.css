/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* All elements will have no padding or margin */
/* The box-sizing property defines how the width and height of an element are calculated: should they include padding and borders, or not. */
/*   box-sizing: border-box === border and padding are no longer added to element */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Applying properties to whole body */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font: size 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}


/* header will  occupy 95% of the viewport size*/
/* The background-position property sets the starting position of a background image. */
/* The background-size property specifies the size of the background images. */
/* There are four different syntaxes you can use with this property: the keyword syntax 
("auto", "cover" and "contain"), the one-value syntax (sets the width of the image (height becomes "auto"), 
the two-value syntax (first value: width of the image, second value: height), and the multiple background syntax 
(separated with comma). */
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, #7ed56fc7, #28b485b0), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)
}



/* parent header should be referenced to calculate top and left, so parent should be set as position: relative */
.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}


.logo {
  height: 35px;
}


.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 10px
}

/* block elements acquire entire width and give a line break so we use that for arranging header at center */
.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation-name: moveInLeft;
  animation-duration: 2s
}

/* animation name is the keyframe animation name we created */
/* animation duration.. the time it takes to complete the animation */
/* animation delay is after how much time the animation starts */
/*  */


.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17px;
  animation-name: moveInRight;
  animation-duration: 2s
}


/* Best way to algin a div horiz and vert inside another div */
/* position is absolute in relation to parent element, parent should have position:relative for this to work */

/* NOTE:: You should also note that, if an absolutely positioned element is not a descendant of a positioned 
(be it absolute, fixed, relative or sticky) element then its positions are set relative to the viewport. */
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}


/* keyframes are used for animation */
/*  0% is the initial state 100% is the final state */
/* so at initail state we want content to be hidden hence opacity is 0 and at final state we want it be completely visible */
/* remember that elements come from the left */
/* transform x means moving from righ  to left and if minus then opposite and transform y means top to bottom and minus means opposite */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px)
  }

  80% {
    transform: translateX(20px)
  }

  100% {
    opacity: 1;
    transform: translate(0)
  }
}



@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px)
  }

  80% {
    transform: translateX(-20px)
  }

  100% {
    opacity: 1;
    transform: translate(0)
  }
}

/* link is a pseudo class which is applied on btn class */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  animation: all .2x;
}


/* on button hover this class gets activated */
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, .2)
}


/* on button click this class gets activated */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 20px rgba(0, 0, 0, .2);
}





.btn-white {
  background-color: #fff;
  color: #777;
}